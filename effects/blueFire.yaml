# Simple Fire effect with random flickering of red to yellow is and white-ish accents
# Fading out to the LED stripe ends for more realistic effect
addressable_lambda: # Blue fire 
  #name: "Blue fire"
  name: "6.0"
  update_interval: 5ms
  lambda: |-
    for( uint8_t i = 0; i <= it.size(); i++) {
      it[i] = Color(22, 24, 130);
      Color color1;
      uint8_t r1,g1,b1;
      uint8_t r2,g2,b2;
      uint8_t r3,g3,b3;
      int16_t r,g,b;

      color1 = it[i].get();
      //int color2[] = {80,35,0};
      int color2[] = {70, 185, 242}; 
      
      r1 = (color1[0]),
      g1 = (color1[1]),
      b1 = (color1[2]);

      r2 = (color2[0]),
      g2 = (color2[1]),
      b2 = (color2[2]);

      // Add Color
      it[i] = Color(constrain(r1+r2, 0, 255), constrain(g1+g2, 0, 255), constrain(b1+b2, 0, 255));
      int rc = random(160);

      // subtract
      
      color2[0] = rc/4;
      color2[1] = rc/4;
      color2[2] = rc;

      r1 = (color1[0]),
      g1 = (color1[1]),
      b1 = (color1[2]);

      r2 = (color2[0]),
      g2 = (color2[1]),
      b2 = (color2[2]);

      r=(int16_t)r1-(int16_t)r2;
      g=(int16_t)g1-(int16_t)g2;
      b=(int16_t)b1-(int16_t)b2;
      if(r<0) r=0;
      if(g<0) g=0;
      if(b<0) b=0;

      // Substract Color
      it[i] = Color(r, g, b);
    }
    
    delay(random(10,120));


